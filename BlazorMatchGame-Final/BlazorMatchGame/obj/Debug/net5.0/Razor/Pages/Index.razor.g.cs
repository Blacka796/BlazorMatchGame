#pragma checksum "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "57e8427caf67a1a9ab00eb1bcab999c755ad98ad"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorMatchGame.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using BlazorMatchGame;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/_Imports.razor"
using BlazorMatchGame.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
using System.Timers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<style>\n    .container{\n        width: 400px;\n    }\n\n    button{\n        width: 100px;\n        height: 100px;\n        font-size: 50px;\n    }\n</style>\n\n");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "class", "row");
            __builder.OpenElement(3, "h2");
            __builder.AddContent(4, "Highest Score: ");
#nullable restore
#line 18 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(5, highScore);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(6, "\n\n");
            __builder.OpenElement(7, "div");
            __builder.AddAttribute(8, "class", "row");
            __builder.OpenElement(9, "h2");
            __builder.AddContent(10, "Timer: ");
#nullable restore
#line 22 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(11, timeDisplay);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\n");
            __builder.OpenElement(13, "div");
            __builder.AddAttribute(14, "class", "row");
            __builder.OpenElement(15, "h2");
            __builder.AddContent(16, "Actual Time: ");
#nullable restore
#line 25 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(17, realTime);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(18, "\n");
            __builder.AddMarkupContent(19, "<div class=\"row\"><p>Correct Match -1 sec, Wrong Match + 1 sec</p></div>\n\n\n");
            __builder.OpenElement(20, "div");
            __builder.AddAttribute(21, "class", "container");
            __builder.OpenElement(22, "div");
            __builder.AddAttribute(23, "class", "row");
#nullable restore
#line 34 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
         for (var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
        {
            var animal = shuffledAnimals[animalNumber];
            var uniqueDescription = $"Button #{animalNumber}";

#line default
#line hidden
#nullable disable
            __builder.OpenElement(24, "div");
            __builder.AddAttribute(25, "class", "col-3");
            __builder.OpenElement(26, "button");
            __builder.AddAttribute(27, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 39 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
                                    () => ButtonClick(animal, uniqueDescription)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(28, "type", "button");
            __builder.AddAttribute(29, "class", "btn-outline-dark");
            __builder.OpenElement(30, "h1");
#nullable restore
#line 40 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(31, animal);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 43 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(32, "\n\n    \n    ");
            __builder.OpenElement(33, "div");
            __builder.AddAttribute(34, "class", "row");
            __builder.OpenElement(35, "h2");
            __builder.AddContent(36, "Matches You Found: ");
#nullable restore
#line 48 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(37, matchesFound);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(38, "\n\n    ");
            __builder.OpenElement(39, "div");
            __builder.AddAttribute(40, "class", "row");
            __builder.OpenElement(41, "h2");
            __builder.AddContent(42, "Matches You Left: ");
#nullable restore
#line 52 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(43, matchesLeft);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(44, "\n\n    ");
            __builder.OpenElement(45, "div");
            __builder.AddAttribute(46, "class", "row");
            __builder.OpenElement(47, "h2");
            __builder.AddContent(48, "Score: ");
#nullable restore
#line 56 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(49, score);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(50, "\n\n    \n    ");
            __builder.OpenElement(51, "div");
            __builder.AddAttribute(52, "class", "row mt-2");
            __builder.AddMarkupContent(53, "<div class=\"col-sm-6\">\n            How many lives do you need?\n        </div>\n        ");
            __builder.OpenElement(54, "div");
            __builder.AddAttribute(55, "class", "col-sm-6 btn-group");
            __builder.AddAttribute(56, "role", "group");
#nullable restore
#line 65 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
             for (int liveNumber = 1; liveNumber <= 4; liveNumber++)
            {
                string valueToDisplay = $" {liveNumber}";
                int LiveNumber = liveNumber;

#line default
#line hidden
#nullable disable
            __builder.OpenElement(57, "button");
            __builder.AddAttribute(58, "type", "button");
            __builder.AddAttribute(59, "class", "btn btn-secondary");
            __builder.AddAttribute(60, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 69 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
                                                                          () => LiveClick(valueToDisplay, LiveNumber)

#line default
#line hidden
#nullable disable
            ));
#nullable restore
#line 69 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(61, liveNumber);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
#nullable restore
#line 72 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(62, "\n    \n    ");
            __builder.OpenElement(63, "div");
            __builder.AddAttribute(64, "class", "row mt-1");
            __builder.OpenElement(65, "h2");
            __builder.AddContent(66, "Lives: ");
            __builder.OpenElement(67, "strong");
#nullable restore
#line 77 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
__builder.AddContent(68, lives);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 81 "/Users/david/Documents/DGM 6309 C#/BlazorMatchGame/BlazorMatchGame/Pages/Index.razor"
       
    List<string> animalEmoji = new List<string>()
    {
        "🐶","🐶",
        "🐱","🐱",
        "🐹","🐹",
        "🦊","🦊",
        "🐼","🐼",
        "🐮","🐮",
        "🐷","🐷",
        "🦁","🦁",
    };

    List<string> shuffledAnimals = new List<string>();

    public string DisplayValue = "";


    //Matches check
    int matchesFound = 0;
    int matchesLeft = 8;

    //Record the player's score, correct match will add 1 point, wrong match will devide 1 point
    int score;
    int currentScore;
    int highScore;
    int cScore = 0;

    //Set up lives for player
    int lives;
    int livesNumber;

    //Timer
    Timer timer;
    int tenthsOfSecondElapsed = 0;
    string timeDisplay;

    string realTime;
    float count;

    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;

        lives = 2;
        SetUpGame();

    }

    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji.OrderBy(item => random.Next()).ToList();

        //Reset the data
        matchesFound = 0;
        matchesLeft = 8;

        score = 0; //score can be negative

        lives = 2;

        count = 0;

        tenthsOfSecondElapsed = 0; //set up timer to 0 at the beginning
    }

    string lastAnimalsFound = string.Empty;
    string lastDescription = string.Empty;

    private void ButtonClick(string animal, string animalDescription)
    {
        //if player click the same animal twice, it should not be the correct match
        if (lastAnimalsFound == string.Empty)
        {
            lastAnimalsFound = animal;
            lastDescription = animalDescription;

            timer.Start();
            // if player click the right match, and it is not the same animal, both animals will disappear
        } else if ((lastAnimalsFound == animal) && (animalDescription != lastDescription))
        {
            lastAnimalsFound = string.Empty;

            shuffledAnimals = shuffledAnimals.Select(a => a.Replace(animal, string.Empty)).ToList();

            score++; //add 1 point

            matchesFound++; // record the right matches
            matchesLeft--; // record the left matches

            count--;

            //if player found all matches, win the game and reset game when end
            if (matchesFound == 8)
            {
                timer.Stop();
                timeDisplay += " You WIN! - Click Animals to Play Again";
                //Keep the high score when win
                currentScore = score;
                matchScore(currentScore, highScore);

                SetUpGame();
            }
        }
        // if player matches worng, it will devide 1 point and loose 1 health
        else
        {
            score--;

            lives--;
            livesNumber = lives;

            count++;

            lastAnimalsFound = string.Empty;
            //if live < 0, the game will end. Not finished yet, still need to work with radio button
        } if (lives < 0)
        {
            timer.Stop();
            timeDisplay += " You LOSE! - Click Animals to Play Again";
            //Keep the high score when lose
            currentScore = score;
            matchScore(currentScore, highScore);

            SetUpGame();
        }
    }

    //Timer function
    private void Timer_Tick(object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecondElapsed ++;
            timeDisplay = (tenthsOfSecondElapsed / 10f).ToString("0.0s");
            StateHasChanged();

            realTime = (tenthsOfSecondElapsed / 10f + count).ToString("0.0s");
        });
    }

    //Display the radio button
    void LiveClick(string displayValue, int LNumber)
    {
        DisplayValue = displayValue;
        lives = LNumber;//Refresh the lives after selection
    }

    //Compare the highscore and current score, refresh the high score
    public void matchScore(int currentScore, int cScore)
    {
        //if currentScore < highest score, keep the highest score
        if (currentScore < cScore)
        {
            highScore = cScore;
        }//else refersh the highest score to be the current if current score > highest score
        else {
            highScore = currentScore;
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
